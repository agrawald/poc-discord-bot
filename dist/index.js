"use strict";var M=Object.create;var R=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames;var z=Object.getPrototypeOf,H=Object.prototype.hasOwnProperty;var Q=(o,e,t)=>e in o?R(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var i=(o,e)=>R(o,"name",{value:e,configurable:!0});var W=(o,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of q(e))!H.call(o,r)&&r!==t&&R(o,r,{get:()=>e[r],enumerable:!(s=A(e,r))||s.enumerable});return o};var j=(o,e,t)=>(t=o!=null?M(z(o)):{},W(e||!o||!o.__esModule?R(t,"default",{value:o,enumerable:!0}):t,o));var l=(o,e,t)=>(Q(o,typeof e!="symbol"?e+"":e,t),t);var p=require("discord.js"),$=require("inversify"),ve=require("reflect-metadata");var u=require("discord.js"),y=require("inversify"),_=j(require("fs")),G=j(require("readline"));var c={Bot:Symbol.for("Bot"),Client:Symbol.for("Client"),Rest:Symbol.for("Rest"),Commands:Symbol.for("Commands"),Config:Symbol.for("Config")};function C(o,e,t,s){var r=arguments.length,n=r<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")n=Reflect.decorate(o,e,t,s);else for(var m=o.length-1;m>=0;m--)(a=o[m])&&(n=(r<3?a(n):r>3?a(e,t,n):a(e,t))||n);return r>3&&n&&Object.defineProperty(e,t,n),n}i(C,"_ts_decorate");function O(o,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(o,e)}i(O,"_ts_metadata");var x=class x{constructor(){l(this,"client");l(this,"config");l(this,"commands");l(this,"rest")}listen(){return this.client.once(u.Events.ClientReady,this.onClientReady),this.client.on(u.Events.GuildCreate,this.onGuildCreate),this.client.on(u.Events.InteractionCreate,this.onInteractionCreate),this.client.on(u.Events.UserUpdate,this.onUserUpdate),this.client.login(this.config.properties.DISCORD_TOKEN)}async onGuildCreate(e){await this.deployCommands({guildId:e.id})}async onUserUpdate(e){console.log(JSON.stringify(e))}async onInteractionCreate(e){this.commands.execute(e)}async onClientReady(){console.log("Discord bot is ready! \u{1F916}");let e=_.createReadStream("./config/guilds.txt"),t=G.createInterface({input:e});for await(let s of t){let r=await this.client.guilds.fetch(s);console.log(`Indexing ${r}`);let n=r.members.cache.map(a=>({username:a.user.tag,avatarUrl:a.user.displayAvatarURL()}));console.log(JSON.stringify(n))}}async deployCommands({guildId:e}){try{console.log("Started refreshing application (/) commands."),await this.rest.put(u.Routes.applicationGuildCommands(this.config.properties.DISCORD_CLIENT_ID,e),{body:this.commands.commandData()}),console.log("Successfully reloaded application (/) commands.")}catch(t){console.error(t)}}};i(x,"Bot");var f=x;C([(0,y.inject)(c.Client),O("design:type",typeof Client>"u"?Object:Client)],f.prototype,"client",void 0);C([(0,y.inject)(c.Config),O("design:type",typeof Config>"u"?Object:Config)],f.prototype,"config",void 0);C([(0,y.inject)(c.Commands),O("design:type",typeof CommandFactory>"u"?Object:CommandFactory)],f.prototype,"commands",void 0);C([(0,y.inject)(c.Rest),O("design:type",typeof REST>"u"?Object:REST)],f.prototype,"rest",void 0);f=C([(0,y.injectable)()],f);var L=require("inversify");var U=require("discord.js");var D=class D{constructor(e,t){l(this,"builder");l(this,"name");this.name=e,this.builder=new U.SlashCommandBuilder().setName(e).setDescription(t)}};i(D,"Command");var d=D;var I=class I extends d{constructor(){super("ping","Replies with Pong!")}async execute(e){return e.reply("Pong!")}};i(I,"PingCommand");var S=I;var T=class T extends d{constructor(){super("server","Provides information about the server.")}async execute(e){return e.guild!=null?await e.reply(`This server is ${e.guild.name} and has ${JSON.stringify(e.guild.members)} members.`):await e.reply("No server found!")}};i(T,"ServerCommand");var v=T;var E=class E extends d{constructor(){super("user","Provides information about the user.")}async execute(e){return e.user!=null?(console.log(JSON.stringify(e.user)),await e.reply(`This command was run by ${e.user.avatarURL()}.`)):await e.reply("No user found!")}};i(E,"UserCommand");var w=E;function X(o,e,t,s){var r=arguments.length,n=r<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")n=Reflect.decorate(o,e,t,s);else for(var m=o.length-1;m>=0;m--)(a=o[m])&&(n=(r<3?a(n):r>3?a(e,t,n):a(e,t))||n);return r>3&&n&&Object.defineProperty(e,t,n),n}i(X,"_ts_decorate");function B(o,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(o,e)}i(B,"_ts_metadata");var P=class P{constructor(){l(this,"commands");this.commands={ping:new S,server:new v,user:new w}}async execute(e){if(!e.isCommand())return;let{commandName:t}=e;return await this.commands[t].execute(e)}commandData(){return Object.keys(this.commands).map(e=>this.commands[e].builder)}};i(P,"CommandFactory");var g=P;g=X([(0,L.injectable)(),B("design:type",Function),B("design:paramtypes",[])],g);var V=j(require("dotenv")),Y=require("inversify");function Z(o,e,t,s){var r=arguments.length,n=r<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")n=Reflect.decorate(o,e,t,s);else for(var m=o.length-1;m>=0;m--)(a=o[m])&&(n=(r<3?a(n):r>3?a(e,t,n):a(e,t))||n);return r>3&&n&&Object.defineProperty(e,t,n),n}i(Z,"_ts_decorate");function J(o,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(o,e)}i(J,"_ts_metadata");var N=class N{constructor(){l(this,"properties");V.default.config();let{DISCORD_TOKEN:e,DISCORD_CLIENT_ID:t}=process.env;if(!e||!t)throw new Error("Missing environment variables");this.properties={DISCORD_TOKEN:e,DISCORD_CLIENT_ID:t}}};i(N,"Config");var b=N;b=Z([(0,Y.injectable)(),J("design:type",Function),J("design:paramtypes",[])],b);var h=new $.Container,F=new b;h.bind(c.Bot).to(f).inSingletonScope();h.bind(c.Client).toConstantValue(new p.Client({intents:[p.GatewayIntentBits.Guilds,p.GatewayIntentBits.GuildMembers],partials:[p.Partials.GuildMember]}));h.bind(c.Commands).toConstantValue(new g);h.bind(c.Config).toConstantValue(F);h.bind(c.Rest).toConstantValue(new p.REST({version:"10"}).setToken(F.properties.DISCORD_TOKEN));var K=h;var k=K.get(c.Bot);k.listen().then(()=>{console.log("Logged in!")}).catch(o=>{console.error("Oh no!",o)});
